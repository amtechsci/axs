<%- include('head'); -%>
<%- include('sidebar') -%>
<style>
  .borderless td, .borderless th {
    border: none;
  }
  .form-group .input-wrapper {
    position: relative;
}

.form-group .icon {
    position: absolute;
    /* Adjust these values as needed to position your icon */
    left: 10px;
    top: 50%;
    transform: translateY(-50%);
    border-right: solid 1px #6e7076;
    padding-right: 10px;
}

.iconpaddind {
    padding-left: 30px; /* Adjust as needed based on icon size */
}
.custom-checkbox {
    position: relative;
    width: 198px;
    height: 44px;
    border-radius: 43.89px;
    border: 1px solid #0D0F13;
    color: #000;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10.97px;
    cursor: pointer;
}

.custom-checkbox input[type="radio"] {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    margin: 0;
    cursor: pointer;
    opacity: 0;
    z-index: 2;
}

.custom-checkbox label {
    position: relative;
    z-index: 1;
    cursor: pointer;
}

.selectchech{
    background-color: #0D0F13;
    color: #fff;
}
#profile_imgDropzone{
  width: 100%; height: 150px;
}
.dz-message{
  margin: 0px !important;
}
.dz-preview{
  margin: 0px !important; margin-right:10px !important;
}
.dropzone{
  padding: 0px !important;
}
.image-wrapper {
    display: inline-block;
    position: relative;
    margin-right: 10px;
}

.image-wrapper button {
    position: absolute;
    top: 0;
    right: 0;
}

</style>
  <div class="content-wrapper">
    <section class="content-header">
      <div class="container-fluid pr-3">
        <div class="row mb-2">
          <div class="col-sm-6">
            <h1>Experiences</h1>
          </div>
        </div>
      </div>
    </section>

    <section class="content">
      <div class="container-fluid pr-3">
        <div class="row">
          <div class="col-12">
              <div class="d-flex justify-content-between align-items-center">
                <div><h3 class="card-title">All Experiences</h3></div>
                <div>
                  <button class="btn bg-black" data-toggle="modal" data-target="#exampleModalCenter" onclick="resetModal()">Create experience</button>
                </div>
              </div>
              <div style="width:100%;overflow: hidden;" class="d-flex justify-content-between mt-3 align-items-center">
              <div class="form-group icon-input" style="width:95%; float: left; margin-bottom: 0px;">
                <div class="input-wrapper">
                  <input type="text" class="form-control iconpaddind" id="roleName" style=" border-radius: 20px;padding-top: 23px;padding-bottom: 23px;">
                  <span class="icon"><svg width="16" height="19" viewBox="0 0 16 19" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd" clip-rule="evenodd" d="M7.87972 12.2593C4.36856 12.2593 1.37012 12.7901 1.37012 14.9162C1.37012 17.0423 4.34954 17.5922 7.87972 17.5922C11.3909 17.5922 14.3885 17.0604 14.3885 14.9352C14.3885 12.81 11.4099 12.2593 7.87972 12.2593Z" stroke="#6E7076" stroke-width="1.6341" stroke-linecap="round" stroke-linejoin="round"/>
                    <path fill-rule="evenodd" clip-rule="evenodd" d="M7.87963 9.22662C10.1838 9.22662 12.0513 7.35821 12.0513 5.05404C12.0513 2.74987 10.1838 0.882324 7.87963 0.882324C5.57546 0.882324 3.70706 2.74987 3.70706 5.05404C3.69927 7.35043 5.55471 9.21883 7.85024 9.22662H7.87963Z" stroke="#6E7076" stroke-width="1.6341" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg></span>
                </div>
              </div>
                <div>
                  <button class="btn bg-black"><img src="/icon/Filter.svg"></button>
                </div>
            </div>
              <div class="table-responsive">
                <table id="example2" class="table table-hover borderless">
                  <thead>
                  <tr>
                    <th>Id</th>
                    <th>Title</th>
                    <th>Description</th>
                    <th>From & To</th>
                    <th>Price</th>
                    <th>Created on</th>
                    <th>Actions</th>
                  </tr>
                  </thead>
                  <tbody>
                    <% let i=1; experience.forEach(function(user) { %>
                      <tr>
                        <td><%- i %></td>
                        <td><%- user.title %></td>
                        <td><%- user.description %></td>
                        <td><%- user.from %> - <%- user.to %></td>
                        <td><%- user.price %></td>
                        <td><%
                          let mysqlDateTime = new Date(user.created_at);
                          let formattedDate = mysqlDateTime.toLocaleDateString('en-US');
                          %><%- formattedDate %></td>
                        <td>
                          <a href="#" onclick="edit('<%- user.id %>')"><img src="/icon/Edit.svg" style="width:20px;height:20px;" class="m-1"></a>
                          <a href="#"><img src="/icon/Delete.svg" style="width:20px;height:20px;" class="m-1"></a>
                        </td>
                      </tr>
                    <% i++; }) %>
                </table>
              </div>
          </div>
        </div>
      </div>
    </section>
  </div>
<%- include('foot') -%>

<div class="modal fade bd-example-modal-lg" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalCenterTitle">Add/edit experience, events</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
      <form action="/admin/add-experience" method="post">
        <div class="row">
          <div class="col custom-checkbox bg-experience m-1 selectchech">
              <input type="radio" id="experience" name="type" id="checkbox-experience" value="experience" onclick="selectchech(this,'experience')" checked />
              <label for="checkbox-experience" style="margin: 0; white-space: nowrap;">Experience</label>
          </div>
          <div class="col custom-checkbox bg-event m-1">
              <input type="radio" id="event" name="type" id="checkbox-event" value="event" onclick="selectchech(this,'event')" />
              <label for="checkbox-event" style="margin: 0; white-space: nowrap;">Event</label>
          </div>
        </div>
        <div class="row">
          <div class="col-12">
            <div class="form-group">
              <label>Images</label>
              <div class="dropzone d-flex align-items-center justify-content-center" id="profile_imgDropzone"></div>
            </div>  
          </div>
          <div class="col-12 col-md-12">
            <div class="form-group">
              <label>Title</label>
              <input type="text" name="title" id="title" class="form-control" id="title"> 
              <input type="hidden" name="images" id="images" value="[]">
              <input type="hidden" name="edit_id" id="edit_id" value="0">
            </div>
          </div>
          <div class="col-12 col-md-12">
            <div class="form-group">
              <label>Task description</label>
              <textarea name="description" class="form-control" id="description"></textarea>
            </div>
          </div>
          <div class="col-12 col-md-4">
            <div class="form-group">
              <label>Category</label>
              <select class="form-control" name="cid" id="cid" onchange="getsubcat(this)" required>
                <option value="">Select Category</option>
                <% categories.forEach(function(category) { %>
                <option value="<%- category.id %>"><%- category.category_name %></option>
                <% }) %>
              </select>
            </div>
          </div>
          <div class="col-12 col-md-4">
            <div class="form-group">
              <label>Sub category</label>
              <select class="form-control" name="scid" id="scid" id="subcategory-select"></select>
            </div>
          </div>
          <div class="col-12 col-md-4">
            <div class="form-group">
              <label>Price</label>
              <input type="number" name="price" id="price" class="form-control"> 
            </div>
          </div>
          <div class="col-12 col-md-4">
            <div class="form-group">
              <label>Location/Place</label>
              <input type="text" name="location" id="location" class="form-control"> 
            </div>
          </div>
          <div class="col-12 col-md-4">
            <div class="form-group">
              <label>Start date</label>
              <input type="date" name="from" id="from" class="form-control"> 
            </div>
          </div>
          <div class="col-12 col-md-4">
            <div class="form-group">
              <label>End date</label>
              <input type="date" name="to" id="to" class="form-control"> 
            </div>
          </div>
          <div class="col-12">
            <div class="form-group">
              <label>Things to do</label>
              <div id="things-to-do-container">
                <div class="d-flex align-items-center things-to-do-item">
                    <div style="width: 90%;">
                        <input type="text" name="things_to_do[]" class="form-control">
                    </div>
                    <img src="/icon/Delete.svg" style="width:20px;height:20px;" class="delete-icon m-1" onclick="deleteRow(this)">
                    <img src="/icon/Plus.svg" style="width:20px;height:20px;" class="add-icon m-1" onclick="addRow(this)">
                </div>
              </div>            
            </div>
          </div>
          <div class="col-12 d-flex justify-content-center mt-2">
            <button type="submit" class="btn btn-primary" style="width: 250px;font-size: 20px;">Save & close</button>
          </div>
        </div>
      </form>
      </div>
    </div>
  </div>
</div>
<script>
  Dropzone.autoDiscover = false;
  function setupDropzone(dropzoneId, url, paramName, hiddenInputName) {
        return new Dropzone(dropzoneId, {
            url: url,
            paramName: paramName,
            maxFiles: 5,
            acceptedFiles: ".pdf,.jpg,.jpeg,.png",
            dictDefaultMessage: "Drop files here or click to upload " + paramName,
            init: function () {
                this.on("success", function (file, response) {
                  console.log(response);
                    let input = document.querySelector('input[name="' + hiddenInputName + '"]');
                    let fileNames = input.value ? JSON.parse(input.value) : [];
                    fileNames.push(response.document_url);
                    input.value = JSON.stringify(fileNames);
                });
            }
        });
  }
  setupDropzone("#profile_imgDropzone", "/admin/files-upload", "document_file", "images");
  document.addEventListener('DOMContentLoaded', function () {
      window.stepper = new Stepper(document.querySelector('.bs-stepper'))
  });

    var usersData = {};

    <% experience.forEach(function(user) { %>
        usersData['user_<%- user.id %>'] = <%- JSON.stringify(user) %>;
    <% }); %>

    function edit(userId) {
    var user = usersData['user_' + userId];
    
    // Populate the modal fields with the user data
    document.getElementById('edit_id').value = userId;
    document.getElementById('title').value = user.title;
    document.getElementById('description').value = user.description;
    document.getElementById('price').value = user.price;
    document.getElementById('location').value = user.location;
    document.getElementById('from').value = user.from;
    document.getElementById('to').value = user.to;
    
    // Set the category and subcategory
    document.getElementById('cid').value = user.cid;
    updateSubCategoryDropdown(user.cid, function() {
        document.getElementById('scid').value = user.scid;
    });

    // Populate images
    var imagesArray = user.images ? user.images.split(',') : [];
    populateImages(imagesArray);

    // Populate "Things to Do"
    populateThingsToDo(user.things_to_do);

    // Show the modal
    $('#exampleModalCenter').modal('show');
}

function populateImages(imagesArray) {
    var imagesContainer = document.getElementById('profile_imgDropzone');
    imagesContainer.innerHTML = ''; // Clear existing images

    imagesArray.forEach(function(imageUrl, index) {
        var imgWrapper = document.createElement('div');
        imgWrapper.className = 'image-wrapper'; // Add a class for styling if needed
        imgWrapper.innerHTML = '<img src="' + imageUrl + '" style="width:100px; height:100px; margin-right: 10px;">' +
                               '<button type="button" class="btn" onclick="removeImage(' + index + ')"><img src="/icon/Delete.svg" style="width:20px;height:20px;" class="m-1"></button>'; // Remove button

        imagesContainer.appendChild(imgWrapper);
    });

    updateImagesInputField(imagesArray);
}


function removeImage(index) {
    var images = JSON.parse(document.getElementById('images').value);
    images.splice(index, 1); // Remove the image from the array
    populateImages(images); // Repopulate the images
    updateImagesInputField(images); // Update the hidden input field
}

function updateImagesInputField(imagesArray) {
    // Transform each URL into an array and then stringify the entire structure
    var formattedImagesData = imagesArray.map(function(imageUrl) {
        return [imageUrl];
    });
    document.getElementById('images').value = JSON.stringify(formattedImagesData);
}

function populateThingsToDo(thingsToDoString) {
    var thingsToDo = thingsToDoString.split(','); // Assuming things to do are comma-separated
    var container = document.getElementById('things-to-do-container');
    container.innerHTML = ''; // Clear existing items
    thingsToDo.forEach(function(item) {
        var div = document.createElement('div');
        div.className = 'd-flex align-items-center things-to-do-item';
        div.innerHTML = '<div style="width: 90%;">' +
                        '<input type="text" name="things_to_do[]" class="form-control" value="' + item + '">' +
                        '</div>' +
                        '<img src="/icon/Delete.svg" style="width:20px;height:20px;" class="delete-icon m-1" onclick="deleteRow(this)">' +
                        '<img src="/icon/Plus.svg" style="width:20px;height:20px;" class="add-icon m-1" onclick="addRow(this)">';
        container.appendChild(div);
    });
}

function updateSubCategoryDropdown(categoryId, callback) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', '/admin/getsubcat?cid=' + categoryId, true);
    xhr.onload = function () {
        if (this.status === 200) {
            var subcatSelect = document.getElementById('scid');
            subcatSelect.innerHTML = this.responseText;
            if (callback) {
                callback(); // Call the callback function after updating the dropdown
            }
        } else {
            console.error('Error in AJAX request for subcategories');
        }
    };
    xhr.send();
}

  function selectchech(checkbox,id){
      var customCheckboxDiv = document.querySelector('.bg-'+id);
        document.querySelector('.selectchech').classList.remove('selectchech');
        customCheckboxDiv.classList.add('selectchech');
  }
  function getsubcat(element) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', '/admin/getsubcat?cid=' + element.value, true);
    xhr.onload = function () {
        if (this.status === 200) {
            document.getElementById('scid').innerHTML = this.responseText;
        } else {
            console.error('Error in AJAX request');
        }
    };
    xhr.send();
}
function addRow(element) {
    var container = document.getElementById("things-to-do-container");
    var newItem = element.parentNode.cloneNode(true); // Clone the current item
    container.appendChild(newItem);
}

function deleteRow(element) {
    var item = element.parentNode;
    if (item.parentNode.childElementCount > 1) { // Ensure at least one row remains
        item.parentNode.removeChild(item);
    }
}

function resetModal() {
    // Reset input fields
    document.getElementById('edit_id').value = 0;
    document.getElementById('title').value = '';
    document.getElementById('description').value = '';
    document.getElementById('price').value = '';
    document.getElementById('location').value = '';
    document.getElementById('from').value = '';
    document.getElementById('to').value = '';
    
    // Reset category and subcategory
    document.getElementById('cid').selectedIndex = 0; // Assuming the first option is the default
    document.getElementById('scid').innerHTML = '<option value="">Select Subcategory</option>'; // Reset subcategory

    // Clear images
    document.getElementById('profile_imgDropzone').innerHTML = '';
    document.getElementById('images').value = '[]';

    // Clear "Things to Do"
    var thingsToDoContainer = document.getElementById('things-to-do-container');
    thingsToDoContainer.innerHTML = `<div class="d-flex align-items-center things-to-do-item">
                    <div style="width: 90%;">
                        <input type="text" name="things_to_do[]" class="form-control">
                    </div>
                    <img src="/icon/Delete.svg" style="width:20px;height:20px;" class="delete-icon m-1" onclick="deleteRow(this)">
                    <img src="/icon/Plus.svg" style="width:20px;height:20px;" class="add-icon m-1" onclick="addRow(this)">
                </div>`;
}

</script>